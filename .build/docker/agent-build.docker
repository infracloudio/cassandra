# Use Alpine Linux as the base image
FROM jenkins/inbound-agent:latest-jdk17

USER root

RUN apt-get update
RUN apt-get install xz-utils -y 

RUN apt-get update && \
    apt-get install -y openjdk-11-jdk openjdk-17-jdk && \
    update-alternatives --set java /usr/lib/jvm/java-11-openjdk-amd64/bin/java && \
    update-alternatives --set javac /usr/lib/jvm/java-11-openjdk-amd64/bin/javac && \
    update-alternatives --install /usr/local/bin/jdk_11 java /usr/lib/jvm/java-11-openjdk-amd64/bin/java 1 && \
    update-alternatives --install /usr/local/bin/jdk_17 java /usr/lib/jvm/java-17-openjdk-amd64/bin/java 1

# Install Docker
RUN apt-get install -y gnupg
# Install Docker for Debian Bullseye
RUN apt-get update && \
    apt-get install -y apt-transport-https ca-certificates curl gnupg lsb-release && \
    curl -fsSL https://download.docker.com/linux/debian/gpg | gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg && \
    echo "deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/debian $(lsb_release -cs) stable" > /etc/apt/sources.list.d/docker.list && \
    apt-get update && \
    apt-get install -y docker-ce docker-ce-cli containerd.io
RUN apt-get install wget

ENV MAVEN_VERSION 3.0.4

# Set the base URL for downloading Maven
ENV MAVEN_BASE_URL https://archive.apache.org/dist/maven/maven-3/${MAVEN_VERSION}/binaries

# Define the installation directory for Maven
ENV MAVEN_HOME /usr/share/maven

# Define the directory where Maven will store its repository
ENV MAVEN_REPO /root/.m2/repository

# Create the Maven installation directory
RUN mkdir -p $MAVEN_HOME

# Download and install Maven
RUN wget -q -O /tmp/apache-maven-${MAVEN_VERSION}-bin.tar.gz $MAVEN_BASE_URL/apache-maven-${MAVEN_VERSION}-bin.tar.gz 

RUN  tar -xzvf /tmp/apache-maven-${MAVEN_VERSION}-bin.tar.gz -C $MAVEN_HOME --strip-components=1 
RUN rm -f /tmp/apache-maven-${MAVEN_VERSION}-bin.tar.gz

# Set Maven environment variables
ENV PATH $MAVEN_HOME/bin:$PATH

# Create the .m2/repository directory and set permissions
RUN mkdir -p $MAVEN_REPO && chmod 777 -R /root/.m2

#VOLUME /var/run/docker.sock






